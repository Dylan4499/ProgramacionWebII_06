// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using agenciaDeViajesV2.Data;

#nullable disable

namespace agenciaDeViajesV2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250128004501_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("agenciaDeViajesV2.Models.ActivityClass", b =>
                {
                    b.Property<int>("PK_activity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_activity"));

                    b.Property<string>("actName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("details")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("states")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PK_activity");

                    b.ToTable("tbactivities", (string)null);
                });

            modelBuilder.Entity("agenciaDeViajesV2.Models.ClientClass", b =>
                {
                    b.Property<int>("PK_client")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_client"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("preferences")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("states")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PK_client");

                    b.ToTable("tbclients", (string)null);
                });

            modelBuilder.Entity("agenciaDeViajesV2.Models.FlyClass", b =>
                {
                    b.Property<int>("PK_fly")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_fly"));

                    b.Property<string>("airline")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("arrivesExpected")
                        .HasColumnType("datetime2");

                    b.Property<string>("arrivesIn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("pricePerSeat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("sailsAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("sailsIn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("states")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PK_fly");

                    b.ToTable("tbflies", (string)null);
                });

            modelBuilder.Entity("agenciaDeViajesV2.Models.HotelClass", b =>
                {
                    b.Property<int>("PK_hotel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_hotel"));

                    b.Property<string>("addressAt")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("hotelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("imageHotel")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("stars")
                        .HasColumnType("int");

                    b.Property<int>("states")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PK_hotel");

                    b.ToTable("tbhotels", (string)null);
                });

            modelBuilder.Entity("agenciaDeViajesV2.Models.OfferClass", b =>
                {
                    b.Property<int>("PK_offer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_offer"));

                    b.Property<int?>("ActivityClassPK_activity")
                        .HasColumnType("int");

                    b.Property<int?>("ClientClassPK_client")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destiny")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DistanceDays")
                        .HasColumnType("int");

                    b.Property<int?>("FK_activity")
                        .HasColumnType("int");

                    b.Property<int>("FK_client")
                        .HasColumnType("int");

                    b.Property<int>("FK_room")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("states")
                        .HasColumnType("int");

                    b.Property<decimal>("totalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PK_offer");

                    b.HasIndex("ActivityClassPK_activity");

                    b.HasIndex("ClientClassPK_client");

                    b.HasIndex("FK_activity");

                    b.HasIndex("FK_client");

                    b.HasIndex("FK_room");

                    b.ToTable("tboffers", (string)null);
                });

            modelBuilder.Entity("agenciaDeViajesV2.Models.PaymentClass", b =>
                {
                    b.Property<int>("PK_payment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_payment"));

                    b.Property<int>("FK_offer")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("paymentMethod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("states")
                        .HasColumnType("int");

                    b.Property<decimal?>("totalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PK_payment");

                    b.HasIndex("FK_offer");

                    b.ToTable("tbpayments", (string)null);
                });

            modelBuilder.Entity("agenciaDeViajesV2.Models.RoleClass", b =>
                {
                    b.Property<int>("PK_rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_rol"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RolName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("states")
                        .HasColumnType("int");

                    b.HasKey("PK_rol");

                    b.ToTable("tbroles", (string)null);
                });

            modelBuilder.Entity("agenciaDeViajesV2.Models.RoomClass", b =>
                {
                    b.Property<int>("PK_room")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_room"));

                    b.Property<int>("FK_hotel")
                        .HasColumnType("int");

                    b.Property<int?>("HotelClassPK_hotel")
                        .HasColumnType("int");

                    b.Property<int>("capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("pricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("states")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PK_room");

                    b.HasIndex("FK_hotel");

                    b.HasIndex("HotelClassPK_hotel");

                    b.ToTable("tbrooms", (string)null);
                });

            modelBuilder.Entity("agenciaDeViajesV2.Models.SeatClass", b =>
                {
                    b.Property<int>("PK_seat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_seat"));

                    b.Property<int>("FK_fly")
                        .HasColumnType("int");

                    b.Property<int>("FK_offer")
                        .HasColumnType("int");

                    b.Property<int?>("FlyClassPK_fly")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("reserState")
                        .HasColumnType("bit");

                    b.Property<string>("seatNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("states")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PK_seat");

                    b.HasIndex("FK_fly");

                    b.HasIndex("FK_offer");

                    b.HasIndex("FlyClassPK_fly");

                    b.ToTable("tbseats", (string)null);
                });

            modelBuilder.Entity("agenciaDeViajesV2.Models.UserClass", b =>
                {
                    b.Property<int>("PK_user")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_user"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FK_rol")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("states")
                        .HasColumnType("int");

                    b.HasKey("PK_user");

                    b.HasIndex("FK_rol");

                    b.ToTable("tbusers", (string)null);
                });

            modelBuilder.Entity("agenciaDeViajesV2.Models.OfferClass", b =>
                {
                    b.HasOne("agenciaDeViajesV2.Models.ActivityClass", null)
                        .WithMany("Offer")
                        .HasForeignKey("ActivityClassPK_activity");

                    b.HasOne("agenciaDeViajesV2.Models.ClientClass", null)
                        .WithMany("Offer")
                        .HasForeignKey("ClientClassPK_client");

                    b.HasOne("agenciaDeViajesV2.Models.ActivityClass", "Activity")
                        .WithMany()
                        .HasForeignKey("FK_activity");

                    b.HasOne("agenciaDeViajesV2.Models.ClientClass", "Client")
                        .WithMany()
                        .HasForeignKey("FK_client")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("agenciaDeViajesV2.Models.RoomClass", "Room")
                        .WithMany()
                        .HasForeignKey("FK_room")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Client");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("agenciaDeViajesV2.Models.PaymentClass", b =>
                {
                    b.HasOne("agenciaDeViajesV2.Models.OfferClass", "Offer")
                        .WithMany()
                        .HasForeignKey("FK_offer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("agenciaDeViajesV2.Models.RoomClass", b =>
                {
                    b.HasOne("agenciaDeViajesV2.Models.HotelClass", "Hotel")
                        .WithMany()
                        .HasForeignKey("FK_hotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("agenciaDeViajesV2.Models.HotelClass", null)
                        .WithMany("Room")
                        .HasForeignKey("HotelClassPK_hotel");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("agenciaDeViajesV2.Models.SeatClass", b =>
                {
                    b.HasOne("agenciaDeViajesV2.Models.FlyClass", "Fly")
                        .WithMany()
                        .HasForeignKey("FK_fly")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("agenciaDeViajesV2.Models.OfferClass", "Offer")
                        .WithMany()
                        .HasForeignKey("FK_offer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("agenciaDeViajesV2.Models.FlyClass", null)
                        .WithMany("Seat")
                        .HasForeignKey("FlyClassPK_fly");

                    b.Navigation("Fly");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("agenciaDeViajesV2.Models.UserClass", b =>
                {
                    b.HasOne("agenciaDeViajesV2.Models.RoleClass", "Role")
                        .WithMany("User")
                        .HasForeignKey("FK_rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("agenciaDeViajesV2.Models.ActivityClass", b =>
                {
                    b.Navigation("Offer");
                });

            modelBuilder.Entity("agenciaDeViajesV2.Models.ClientClass", b =>
                {
                    b.Navigation("Offer");
                });

            modelBuilder.Entity("agenciaDeViajesV2.Models.FlyClass", b =>
                {
                    b.Navigation("Seat");
                });

            modelBuilder.Entity("agenciaDeViajesV2.Models.HotelClass", b =>
                {
                    b.Navigation("Room");
                });

            modelBuilder.Entity("agenciaDeViajesV2.Models.RoleClass", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
